> git fetch                  获取到远程仓库的状态，不是最新的数据
> git checkout master        切换到本地的master，同步远端
  git pull origin/master     获取远程master上的最新的更改数据
> git checkout my-branch
> git rebase origin/master   将当前分支的修改rebase到最新master分支进行叠加
  git force push             在完成rebase之后，强制push到远端的指定分支上
> merge to origin/master     pull request通过之后，merge到origin/master上面

TODO. 远程仓库创建好后, A机器(Project A)push提交后删除本地数据, 如何从B机器(Project B)push提交到该仓库 ?
> git remote add origin https://...git               为B机器添加远程仓库
> git push                                           直接提交 Error
> git push --set-upstream origin main                指定提交到远端的main分支 Error
> git push origin main
> git push --force                                   强制提交到远程仓库，进行覆盖
> git pull                                           将远端分支的数据"pull拉"下来，和本地的项目merge
                                                     The “fatal: refusing to merge unrelated histories” Git error
> git pull origin master --allow-unrelated-histories 设置在"pull拉"下来的时候，允许合并不相关的历史记录

TODO. A机器上不同项目对应不同的远程仓库
添加指定的远程仓库的链接(使用具体的username=chentong2015,具体的项目repo名称)
在提交时需要认证(Git授权管理: 用户名+密码)
> git remote set-url origin "https://github-username@github.com/github-username/github-repository-name.git"
> git pull
> git push

TODO. 同一个PC上更换用户之后导致原始项目资源的Ownership(所有权)变化 ?
 C:\Users\ctong>whoami 显示当前登录的用户
$ git add .
fatal: detected dubious ownership in repository at
'D:/**/Spring Master/JavaSpringMaster' is owned by:
    'S-1-5-21-1202660629-1993962763-839522115-56052'
but the current user is:
    'S-1-5-21-839522115-606747145-725345543-89708'
To add an exception for this directory, call:
    git config --global --add safe.directory 'D:/**/Spring Master/JavaSpringMaster'
