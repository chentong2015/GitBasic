> git push origin master
> git push origin new.branch     添加远端的新分支，并做push
> git push origin :delete.branch 删除远端的分支
> git push --force               强制push，覆盖掉远端分支

TODO. Fetch+Merge
fetch操作会拿到远程repository的状态(所有远程分支的状态, 例如获取远程分支被删除的情况)
并更新本地分支的remote关联, 可以避免提交到远程已经删除的branch分支上
> git fetch
> git merge  合并分支的方式有多种情况, 例如Fast-Forward

> git pull
> git pull --rebase 从远程分支拉changes下来，然后将本地分支的变更叠加在上面

> git pull --set-upstream master origin/master 定义分支的追踪
  Branch master set up to track remote branch master from origin
> git pull origin master 注明要pull的分支
  如果这里使用SSH协议，则不要使用SSH key来完成认证，而不是HTTP的密码

TODO. 远程仓库创建好后, A机器push提交后删除本地数据, 如何从B机器push提交到该仓库 ?
> git remote add origin https://...git 为B机器添加远程仓库
> git push                             直接提交 Error
> git push --set-upstream origin main  指定提交到远端的main分支 Error
> git push origin main
> git push --force                     强制提交到远程仓库，进行覆盖
> git pull                             将远端分支的数据"pull拉"下来，和本地的项目merge
                                       The “fatal: refusing to merge unrelated histories” Git error
> git pull origin main --allow-unrelated-histories 设置在"pull拉"下来的时候，允许合并不相关的历史记录